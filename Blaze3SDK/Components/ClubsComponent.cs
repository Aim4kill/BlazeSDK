using Blaze3SDK.Blaze;
using Blaze3SDK.Blaze.Clubs;
using BlazeCommon;
using static Blaze3SDK.Components.ClubsComponent;

namespace Blaze3SDK.Components
{
    public class ClubsComponent : ComponentData<ClubsComponentCommand, ClubsComponentNotification, ClubsComponentError>
    {
        public ClubsComponent() : base((ushort)Component.ClubsComponent)
        {

        }

        public override Type GetCommandErrorResponseType(ClubsComponentCommand command) => command switch
        {
            ClubsComponentCommand.createClub => throw new NotImplementedException(),
            ClubsComponentCommand.getClubs => throw new NotImplementedException(),
            ClubsComponentCommand.findClubs => throw new NotImplementedException(),
            ClubsComponentCommand.findClubs2 => throw new NotImplementedException(),
            ClubsComponentCommand.removeMember => throw new NotImplementedException(),
            ClubsComponentCommand.sendInvitation => throw new NotImplementedException(),
            ClubsComponentCommand.getInvitations => throw new NotImplementedException(),
            ClubsComponentCommand.revokeInvitation => throw new NotImplementedException(),
            ClubsComponentCommand.acceptInvitation => throw new NotImplementedException(),
            ClubsComponentCommand.declineInvitation => throw new NotImplementedException(),
            ClubsComponentCommand.getMembers => throw new NotImplementedException(),
            ClubsComponentCommand.promoteToGM => throw new NotImplementedException(),
            ClubsComponentCommand.demoteToMember => throw new NotImplementedException(),
            ClubsComponentCommand.updateClubSettings => throw new NotImplementedException(),
            ClubsComponentCommand.postNews => throw new NotImplementedException(),
            ClubsComponentCommand.getNews => throw new NotImplementedException(),
            ClubsComponentCommand.setNewsItemHidden => throw new NotImplementedException(),
            ClubsComponentCommand.setMetadata => throw new NotImplementedException(),
            ClubsComponentCommand.setMetadata2 => throw new NotImplementedException(),
            ClubsComponentCommand.getClubsComponentSettings => throw new NotImplementedException(),
            ClubsComponentCommand.transferOwnership => throw new NotImplementedException(),
            ClubsComponentCommand.getClubMembershipForUsers => throw new NotImplementedException(),
            ClubsComponentCommand.sendPetition => throw new NotImplementedException(),
            ClubsComponentCommand.getPetitions => throw new NotImplementedException(),
            ClubsComponentCommand.acceptPetition => throw new NotImplementedException(),
            ClubsComponentCommand.declinePetition => throw new NotImplementedException(),
            ClubsComponentCommand.revokePetition => throw new NotImplementedException(),
            ClubsComponentCommand.joinClub => throw new NotImplementedException(),
            ClubsComponentCommand.getClubRecordbook => throw new NotImplementedException(),
            ClubsComponentCommand.resetClubRecords => throw new NotImplementedException(),
            ClubsComponentCommand.updateMemberOnlineStatus => throw new NotImplementedException(),
            ClubsComponentCommand.getClubAwards => throw new NotImplementedException(),
            ClubsComponentCommand.updateMemberMetadata => throw new NotImplementedException(),
            ClubsComponentCommand.findClubsAsync => throw new NotImplementedException(),
            ClubsComponentCommand.findClubs2Async => throw new NotImplementedException(),
            ClubsComponentCommand.listRivals => throw new NotImplementedException(),
            ClubsComponentCommand.getClubTickerMessages => throw new NotImplementedException(),
            ClubsComponentCommand.setClubTickerMessagesSubscription => throw new NotImplementedException(),
            ClubsComponentCommand.changeClubStrings => throw new NotImplementedException(),
            ClubsComponentCommand.countMessages => throw new NotImplementedException(),
            ClubsComponentCommand.getMembersAsync => throw new NotImplementedException(),
            ClubsComponentCommand.getClubBans => throw new NotImplementedException(),
            ClubsComponentCommand.getUserBans => throw new NotImplementedException(),
            ClubsComponentCommand.banMember => throw new NotImplementedException(),
            ClubsComponentCommand.unbanMember => throw new NotImplementedException(),
            ClubsComponentCommand.GetClubsComponentInfo => throw new NotImplementedException(),
            ClubsComponentCommand.disbandClub => throw new NotImplementedException(),
            ClubsComponentCommand.getNewsForClubs => throw new NotImplementedException(),
            ClubsComponentCommand.getPetitionsForClubs => throw new NotImplementedException(),
            _ => typeof(NullStruct)
        };

        public override Type GetCommandRequestType(ClubsComponentCommand command) => command switch
        {
            ClubsComponentCommand.createClub => throw new NotImplementedException(),
            ClubsComponentCommand.getClubs => throw new NotImplementedException(),
            ClubsComponentCommand.findClubs => throw new NotImplementedException(),
            ClubsComponentCommand.findClubs2 => throw new NotImplementedException(),
            ClubsComponentCommand.removeMember => throw new NotImplementedException(),
            ClubsComponentCommand.sendInvitation => throw new NotImplementedException(),
            ClubsComponentCommand.getInvitations => throw new NotImplementedException(),
            ClubsComponentCommand.revokeInvitation => throw new NotImplementedException(),
            ClubsComponentCommand.acceptInvitation => throw new NotImplementedException(),
            ClubsComponentCommand.declineInvitation => throw new NotImplementedException(),
            ClubsComponentCommand.getMembers => throw new NotImplementedException(),
            ClubsComponentCommand.promoteToGM => throw new NotImplementedException(),
            ClubsComponentCommand.demoteToMember => throw new NotImplementedException(),
            ClubsComponentCommand.updateClubSettings => throw new NotImplementedException(),
            ClubsComponentCommand.postNews => throw new NotImplementedException(),
            ClubsComponentCommand.getNews => throw new NotImplementedException(),
            ClubsComponentCommand.setNewsItemHidden => throw new NotImplementedException(),
            ClubsComponentCommand.setMetadata => throw new NotImplementedException(),
            ClubsComponentCommand.setMetadata2 => throw new NotImplementedException(),
            ClubsComponentCommand.getClubsComponentSettings => throw new NotImplementedException(),
            ClubsComponentCommand.transferOwnership => throw new NotImplementedException(),
            ClubsComponentCommand.getClubMembershipForUsers => throw new NotImplementedException(),
            ClubsComponentCommand.sendPetition => throw new NotImplementedException(),
            ClubsComponentCommand.getPetitions => throw new NotImplementedException(),
            ClubsComponentCommand.acceptPetition => throw new NotImplementedException(),
            ClubsComponentCommand.declinePetition => throw new NotImplementedException(),
            ClubsComponentCommand.revokePetition => throw new NotImplementedException(),
            ClubsComponentCommand.joinClub => throw new NotImplementedException(),
            ClubsComponentCommand.getClubRecordbook => throw new NotImplementedException(),
            ClubsComponentCommand.resetClubRecords => throw new NotImplementedException(),
            ClubsComponentCommand.updateMemberOnlineStatus => throw new NotImplementedException(),
            ClubsComponentCommand.getClubAwards => throw new NotImplementedException(),
            ClubsComponentCommand.updateMemberMetadata => throw new NotImplementedException(),
            ClubsComponentCommand.findClubsAsync => throw new NotImplementedException(),
            ClubsComponentCommand.findClubs2Async => throw new NotImplementedException(),
            ClubsComponentCommand.listRivals => throw new NotImplementedException(),
            ClubsComponentCommand.getClubTickerMessages => throw new NotImplementedException(),
            ClubsComponentCommand.setClubTickerMessagesSubscription => throw new NotImplementedException(),
            ClubsComponentCommand.changeClubStrings => throw new NotImplementedException(),
            ClubsComponentCommand.countMessages => throw new NotImplementedException(),
            ClubsComponentCommand.getMembersAsync => throw new NotImplementedException(),
            ClubsComponentCommand.getClubBans => throw new NotImplementedException(),
            ClubsComponentCommand.getUserBans => throw new NotImplementedException(),
            ClubsComponentCommand.banMember => throw new NotImplementedException(),
            ClubsComponentCommand.unbanMember => throw new NotImplementedException(),
            ClubsComponentCommand.GetClubsComponentInfo => throw new NotImplementedException(),
            ClubsComponentCommand.disbandClub => throw new NotImplementedException(),
            ClubsComponentCommand.getNewsForClubs => throw new NotImplementedException(),
            ClubsComponentCommand.getPetitionsForClubs => throw new NotImplementedException(),
            _ => typeof(NullStruct)
        };

        public override Type GetCommandResponseType(ClubsComponentCommand command) => command switch
        {
            ClubsComponentCommand.createClub => throw new NotImplementedException(),
            ClubsComponentCommand.getClubs => throw new NotImplementedException(),
            ClubsComponentCommand.findClubs => throw new NotImplementedException(),
            ClubsComponentCommand.findClubs2 => throw new NotImplementedException(),
            ClubsComponentCommand.removeMember => throw new NotImplementedException(),
            ClubsComponentCommand.sendInvitation => throw new NotImplementedException(),
            ClubsComponentCommand.getInvitations => throw new NotImplementedException(),
            ClubsComponentCommand.revokeInvitation => throw new NotImplementedException(),
            ClubsComponentCommand.acceptInvitation => throw new NotImplementedException(),
            ClubsComponentCommand.declineInvitation => throw new NotImplementedException(),
            ClubsComponentCommand.getMembers => throw new NotImplementedException(),
            ClubsComponentCommand.promoteToGM => throw new NotImplementedException(),
            ClubsComponentCommand.demoteToMember => throw new NotImplementedException(),
            ClubsComponentCommand.updateClubSettings => throw new NotImplementedException(),
            ClubsComponentCommand.postNews => throw new NotImplementedException(),
            ClubsComponentCommand.getNews => throw new NotImplementedException(),
            ClubsComponentCommand.setNewsItemHidden => throw new NotImplementedException(),
            ClubsComponentCommand.setMetadata => throw new NotImplementedException(),
            ClubsComponentCommand.setMetadata2 => throw new NotImplementedException(),
            ClubsComponentCommand.getClubsComponentSettings => throw new NotImplementedException(),
            ClubsComponentCommand.transferOwnership => throw new NotImplementedException(),
            ClubsComponentCommand.getClubMembershipForUsers => throw new NotImplementedException(),
            ClubsComponentCommand.sendPetition => throw new NotImplementedException(),
            ClubsComponentCommand.getPetitions => throw new NotImplementedException(),
            ClubsComponentCommand.acceptPetition => throw new NotImplementedException(),
            ClubsComponentCommand.declinePetition => throw new NotImplementedException(),
            ClubsComponentCommand.revokePetition => throw new NotImplementedException(),
            ClubsComponentCommand.joinClub => throw new NotImplementedException(),
            ClubsComponentCommand.getClubRecordbook => throw new NotImplementedException(),
            ClubsComponentCommand.resetClubRecords => throw new NotImplementedException(),
            ClubsComponentCommand.updateMemberOnlineStatus => throw new NotImplementedException(),
            ClubsComponentCommand.getClubAwards => throw new NotImplementedException(),
            ClubsComponentCommand.updateMemberMetadata => throw new NotImplementedException(),
            ClubsComponentCommand.findClubsAsync => throw new NotImplementedException(),
            ClubsComponentCommand.findClubs2Async => throw new NotImplementedException(),
            ClubsComponentCommand.listRivals => throw new NotImplementedException(),
            ClubsComponentCommand.getClubTickerMessages => throw new NotImplementedException(),
            ClubsComponentCommand.setClubTickerMessagesSubscription => throw new NotImplementedException(),
            ClubsComponentCommand.changeClubStrings => throw new NotImplementedException(),
            ClubsComponentCommand.countMessages => throw new NotImplementedException(),
            ClubsComponentCommand.getMembersAsync => throw new NotImplementedException(),
            ClubsComponentCommand.getClubBans => throw new NotImplementedException(),
            ClubsComponentCommand.getUserBans => throw new NotImplementedException(),
            ClubsComponentCommand.banMember => throw new NotImplementedException(),
            ClubsComponentCommand.unbanMember => throw new NotImplementedException(),
            ClubsComponentCommand.GetClubsComponentInfo => throw new NotImplementedException(),
            ClubsComponentCommand.disbandClub => throw new NotImplementedException(),
            ClubsComponentCommand.getNewsForClubs => throw new NotImplementedException(),
            ClubsComponentCommand.getPetitionsForClubs => throw new NotImplementedException(),
            _ => typeof(NullStruct)
        };

        public override Type GetNotificationType(ClubsComponentNotification notification) => notification switch
        {
            ClubsComponentNotification.FindClubsAsyncNotification => typeof(FindClubsAsyncResult),
            ClubsComponentNotification.NewClubTickerMessageNotification => typeof(ClubTickerMessage),
            ClubsComponentNotification.GetMembersAsyncNotification => typeof(GetMembersAsyncResult),
            _ => typeof(NullStruct)
        };

        public enum ClubsComponentCommand : ushort
        {
            createClub = 1100,
            getClubs = 1200,
            findClubs = 1300,
            findClubs2 = 1310,
            removeMember = 1400,
            sendInvitation = 1500,
            getInvitations = 1600,
            revokeInvitation = 1700,
            acceptInvitation = 1800,
            declineInvitation = 1900,
            getMembers = 2000,
            promoteToGM = 2100,
            demoteToMember = 2150,
            updateClubSettings = 2200,
            postNews = 2300,
            getNews = 2400,
            setNewsItemHidden = 2450,
            setMetadata = 2500,
            setMetadata2 = 2510,
            getClubsComponentSettings = 2600,
            transferOwnership = 2650,
            getClubMembershipForUsers = 2700,
            sendPetition = 2800,
            getPetitions = 2900,
            acceptPetition = 3000,
            declinePetition = 3100,
            revokePetition = 3200,
            joinClub = 3300,
            getClubRecordbook = 3400,
            resetClubRecords = 3410,
            updateMemberOnlineStatus = 3500,
            getClubAwards = 3600,
            updateMemberMetadata = 3700,
            findClubsAsync = 3800,
            findClubs2Async = 3810,
            listRivals = 3900,
            getClubTickerMessages = 4000,
            setClubTickerMessagesSubscription = 4100,
            changeClubStrings = 4200,
            countMessages = 4300,
            getMembersAsync = 4400,
            getClubBans = 4500,
            getUserBans = 4600,
            banMember = 4700,
            unbanMember = 4800,
            GetClubsComponentInfo = 4900,
            disbandClub = 5000,
            getNewsForClubs = 5100,
            getPetitionsForClubs = 5200,
        }

        public enum ClubsComponentNotification : ushort
        {
            FindClubsAsyncNotification = 0,
            NewClubTickerMessageNotification = 1,
            GetMembersAsyncNotification = 2,
        }

        public enum ClubsComponentError
        {
            CLUBS_ERR_INVALID_ARGUMENT = 65667083,
            CLUBS_ERR_MAX_CLUBS = 65732619,
            CLUBS_ERR_CLUB_NAME_IN_USE = 65798155,
            CLUBS_ERR_PROFANITY_FILTER = 65863691,
            CLUBS_ERR_NO_PRIVILEGE = 65994763,
            CLUBS_ERR_INVALID_USER_ID = 66060299,
            CLUBS_ERR_INVALID_CLUB_ID = 66125835,
            CLUBS_ERR_TOO_MANY_ITEMS_PER_FETCH_REQUESTED = 66191371,
            CLUBS_ERR_INVALID_CLUBNAME_SIZE = 66256907,
            CLUBS_ERR_INVALID_NON_UNIQUE_NAME_SIZE = 66322443,
            CLUBS_ERR_INVALID_DOMAIN_ID = 66387979,
            CLUBS_ERR_INVALID_MAX_COUNT = 72155147,
            CLUBS_ERR_INVALID_OFFSET = 72220683,
            CLUBS_ERR_INVALID_CLUBNAME_EMPTY = 78708747,
            CLUBS_ERR_INVALID_CLUBNAME_ILLEGAL = 78774283,
            CLUBS_ERR_INVALID_CLUBNAME_PROFANITY = 78839819,
            CLUBS_ERR_INVALID_NON_UNIQUE_NAME_EMPTY = 78905355,
            CLUBS_ERR_USER_NOT_MEMBER = 85262347,
            CLUBS_ERR_LAST_GM_CANNOT_LEAVE = 85327883,
            CLUBS_ERR_CANNOT_KICK_OWNER = 85393419,
            CLUBS_ERR_ALREADY_GM = 85458955,
            CLUBS_ERR_MAX_INVITES_SENT = 85524491,
            CLUBS_ERR_MAX_INVITES_RECEIVED = 85590027,
            CLUBS_ERR_MAX_PETITIONS_SENT = 85655563,
            CLUBS_ERR_MAX_PETITIONS_RECEIVED = 85721099,
            CLUBS_ERR_MAX_MESSAGES_SENT = 85786635,
            CLUBS_ERR_MAX_MESSAGES_RECEIVED = 85852171,
            CLUBS_ERR_CLUB_FULL = 85917707,
            CLUBS_ERR_TOO_MANY_GMS = 85983243,
            CLUBS_ERR_INVITATION_ALREADY_SENT = 86048779,
            CLUBS_ERR_DEMOTE_MEMBER = 88473611,
            CLUBS_ERR_DEMOTE_OWNER = 88539147,
            CLUBS_ERR_DEMOTE_LAST_GM = 88604683,
            CLUBS_ERR_TRANSFER_OWNERSHIP_TO_OWNER = 89194507,
            CLUBS_ERR_ALREADY_MEMBER = 91815947,
            CLUBS_ERR_PETITION_DISABLED = 91881483,
            CLUBS_ERR_PETITION_ALREADY_SENT = 91947019,
            CLUBS_ERR_JOIN_DISABLED = 92012555,
            CLUBS_ERR_MISSING_NEWS_TYPE_FILTER = 98369547,
            CLUBS_ERR_TOO_MANY_PARAMETERS = 98435083,
            CLUBS_ERR_NEWS_TEXT_OR_STRINGID_MUST_BE_EMPTY = 98500619,
            CLUBS_ERR_ASSOCIATE_CLUB_ID_MUST_BE_ZERO = 98566155,
            CLUBS_ERR_NEWS_ITEM_NOT_FOUND = 98631691,
            CLUBS_ERR_DUPLICATE_RIVALS = 104923147,
            CLUBS_ERR_USER_BANNED = 111476747,
            CLUBS_ERR_INVALID_TAG_TEXT_EMPTY = 118030347,
            CLUBS_ERR_INVALID_TAG_TEXT_SIZE = 118095883,
            CLUBS_ERR_TAG_TEXT_NOT_FOUND = 118161419,
            CLUBS_ERR_WRONG_PASSWORD = 124583947,
            CLUBS_ERR_INVALID_PASSWORD_PROFANITY = 124649483,
        }

    }
}
